/*
Yet Another MVC Game

Controllers recieve all input
Controllers have current 'primary child' that recieves any input not stopped by controller [think bubbles]


Engine:
- Battle Controller
-- MapController
-- UnitController

- Battle
-- Map
-- Units

idea:
each display area has 3 planes -- above, normal, below -- these planes nest amonst like kinds in z-index order, but anything on high is above anything on normal.
Implmenented with 3 display objects on root that move as one, but inhabit different z-indexes

*/



class Engine {




}


public final class ZPlane {
    public static const LOW:ZPlane = new ZPlane();
    public static const NORMAL:ZPlane = new ZPlane();
    public static const HIGH:ZPlane = new ZPlane();
}


class WrappedMovieClip extends MovieClip {
}

abstract class SpriteModel {
    // All coords are relative to parent object, they know nothing of the world beyond. Ideally can go negative, TBD.
    public function get x():int;
    public function get y()int;
    public function get z():int;
    public function get animationFrame():int;
    public function get currentAnimation():AnimatedClip
}


class TileList extends Array { } // Some sort of array?
class TileSet extends Set { }

class Map extends BaseModel {
    
}

class UnitMoveController extends BaseController {
    public function UnitMoveController(map:Map) {
    }

    public function getAllowableMoves(unit:Unit):TileSet {
    }

    public function routeToSquare(unit:Unit, tile:Tile):TileList {
    }
}



class Battle {
    public final var attacker:Unit;
    public final var defender:Unit;
    // TBD
}

class FightController extends BaseController {
    public function FightController(map:Map) {
    }

    public function getBattle(attacker:Unit, defender:Unit):Battle {

    }
}

class UnitController extends BaseController{

}

class MapController extends BaseController {

}


/*
Flows
*/

public interface Flow {
    static class State {
        START;
        //STATE_1...
    }

    // Flow.State currentState;

}

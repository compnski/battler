
TODO:

Consider moving unit spawn logic and death logic into a Flow? [May violate the only acts when active].
{Event queueing?}

-timing system
- some interface, getNextActionAt?
â€” each unit has nextActionAt

//TODO: Split into LevelLoader and LevelModel
// action queue view

nextTurn():Action { }
changeSpd(amt:int):void { }?


Action {at:1234 type:"Turn", unit:UnitModel }
Action {at:1450 type:"Effect", effect: EffectModel }


-New AI - using fields
-- each square calculates it's value based on certain rules [can attack / be attacked in x turns]


- Unit detail view
-  Attacking
-- highlight possible attack targets
-- implement auras

-- Pretty up AttackView
-- buttons to change targets


-AOE?
- Battle forecast?
- Loading units [ sqLite? files?]
- simple sprites

thinks to mull:
-move units from BattleModel to MapModel

Important Screens:

- Battle
- Char / Inventory
- Barracks
- Shops
- Overworld map
- Battle animations

Flows:

Battle
* Start
 * Choose Units
 * Equip
 * Set positioning
* Show details info on a unit
* Unit Turn
 * Move
 * Select target
 * Select action [attack / ability]
 * choose weapon
* Battle forecast
* Character dialog

Possible unit actions?
* attack
* ability
* item

Char / Inventory
* See all stats
* Change classes ?
* Change gear

Barracks
* Upgrade gear
* Try gear/weapons on a dummy?
* Talk to party members?

Shops
* Buy gear
* Sell stuff

Overworld map
* Quick travel?
* Graph or overland?
* Find loots
* Do side-quests?

Battle animations?
* Animation showing all effects


Open questions?
* how to resolve speed ties
